name: CI

on:
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up a Vertica server
        timeout-minutes: 15
        run: |
          docker pull vertica/vertica-ce:latest
          docker run -d -v /tmp:/tmp -p 5433:5433 -p 5444:5444 \
            --name vertica_docker \
            vertica/vertica-ce
          echo "Vertica startup ..."
          until docker exec vertica_docker test -f /data/vertica/VMart/agent_start.out; do \
            echo "..."; \
            sleep 3; \
          done;
          echo "Vertica is up"
          docker exec -u dbadmin vertica_docker /opt/vertica/bin/vsql -c "\l"
          docker exec -u dbadmin vertica_docker /opt/vertica/bin/vsql -c "select version();"
      - name: Install dependencies
        run: |
          echo "Install tox"
          pip install tox
      - name: Run tests
        run: |
          export VP_TEST_USER=dbadmin
          echo "*** Calling tox based on python-version ***"
          echo ${{ matrix.python-version }}
          if ${{ matrix.python-version == '3.9' }}; then
            tox -e py39
          elif ${{ matrix.python-version == '3.10' }}; then
            tox -e py310
          elif ${{ matrix.python-version == '3.11' }}; then
            tox -e py311
          elif ${{ matrix.python-version == '3.12' }}; then
            tox -e py312
          fi
